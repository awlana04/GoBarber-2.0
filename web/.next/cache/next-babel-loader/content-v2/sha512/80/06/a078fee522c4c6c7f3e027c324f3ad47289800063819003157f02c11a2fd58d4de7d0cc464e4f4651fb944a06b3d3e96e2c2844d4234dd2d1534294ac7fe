{"ast":null,"code":"import { makeSchema, connectionPlugin } from 'nexus';\nimport { nexusPrisma } from 'nexus-plugin-prisma';\nimport path from 'path';\nimport { Appointment } from '@modules/appointments/infra/schemas/Appointment';\nimport { Barber } from '@modules/barbers/infra/schemas/Barber';\nimport { User } from '@modules/users/infra/schemas/User';\nimport { Query } from './schemas/Query';\nimport { Mutation } from './schemas/Mutation';\nconst schema = makeSchema({\n  types: [Appointment, Barber, User, Query, Mutation],\n  outputs: {\n    typegen: path.join(__dirname, '..', '..', '..', '..', '..', 'generated', 'nexus-typegen.ts'),\n    schema: path.join(__dirname, '..', '..', '..', '..', '..', 'generated', 'schema.graphql')\n  },\n  plugins: [nexusPrisma({\n    experimentalCRUD: true\n  }), connectionPlugin()],\n  contextType: {\n    module: path.join(__dirname, '..', 'http', 'context.ts'),\n    export: 'Context'\n  },\n  sourceTypes: {\n    modules: [{\n      module: path.join(__dirname, '..', '..', 'node_modules', '.prisma', 'client', 'index.d.ts'),\n      alias: 'prisma'\n    }]\n  }\n});\nexport default schema;","map":{"version":3,"sources":["/home/long1/Documents/Scripts/www/Rocketseat/GoStack/GoBarber-2.0/web/pages/api/shared/infra/graphql/index.ts"],"names":["makeSchema","connectionPlugin","nexusPrisma","path","Appointment","Barber","User","Query","Mutation","schema","types","outputs","typegen","join","__dirname","plugins","experimentalCRUD","contextType","module","export","sourceTypes","modules","alias"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,WAAT,QAA4B,iDAA5B;AACA,SAASC,MAAT,QAAuB,uCAAvB;AACA,SAASC,IAAT,QAAqB,mCAArB;AAEA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,QAA0B,oBAA1B;AAEA,MAAMC,MAAM,GAAGT,UAAU,CAAC;AACxBU,EAAAA,KAAK,EAAE,CAACN,WAAD,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,QAAnC,CADiB;AAExBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAET,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,IAA7C,EAAmD,WAAnD,EAAgE,kBAAhE,CADF;AAEPL,IAAAA,MAAM,EAAEN,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C,IAA7C,EAAmD,WAAnD,EAAgE,gBAAhE;AAFD,GAFe;AAMxBC,EAAAA,OAAO,EAAE,CAACb,WAAW,CAAC;AAAEc,IAAAA,gBAAgB,EAAE;AAApB,GAAD,CAAZ,EAA0Cf,gBAAgB,EAA1D,CANe;AAOxBgB,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEf,IAAI,CAACU,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,MAA3B,EAAmC,YAAnC,CADG;AAEXK,IAAAA,MAAM,EAAE;AAFG,GAPW;AAWxBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE,CACP;AACEH,MAAAA,MAAM,EAAEf,IAAI,CAACU,IAAL,CACNC,SADM,EAEN,IAFM,EAGN,IAHM,EAIN,cAJM,EAKN,SALM,EAMN,QANM,EAON,YAPM,CADV;AAUEQ,MAAAA,KAAK,EAAE;AAVT,KADO;AADE;AAXW,CAAD,CAAzB;AA6BA,eAAeb,MAAf","sourcesContent":["import { makeSchema, connectionPlugin } from 'nexus';\nimport { nexusPrisma } from 'nexus-plugin-prisma';\nimport path from 'path';\n\nimport { Appointment } from '@modules/appointments/infra/schemas/Appointment';\nimport { Barber } from '@modules/barbers/infra/schemas/Barber';\nimport { User } from '@modules/users/infra/schemas/User';\n\nimport { Query } from './schemas/Query';\nimport { Mutation } from  './schemas/Mutation';\n\nconst schema = makeSchema({\n  types: [Appointment, Barber, User, Query, Mutation],\n  outputs: {\n    typegen: path.join(__dirname, '..', '..', '..', '..', '..', 'generated', 'nexus-typegen.ts'),\n    schema: path.join(__dirname, '..', '..', '..', '..', '..', 'generated', 'schema.graphql'),\n  },\n  plugins: [nexusPrisma({ experimentalCRUD: true }), connectionPlugin()],\n  contextType: {\n    module: path.join(__dirname, '..', 'http', 'context.ts'),\n    export: 'Context',\n  },\n  sourceTypes: {\n    modules: [\n      {\n        module: path.join(\n          __dirname,\n          '..',\n          '..',\n          'node_modules',\n          '.prisma',\n          'client',\n          'index.d.ts',\n        ),\n        alias: 'prisma',\n      },\n    ],\n  },\n});\n\nexport default schema;\n"]},"metadata":{},"sourceType":"module"}