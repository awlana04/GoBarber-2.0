{"ast":null,"code":"import _regeneratorRuntime from \"/home/lon1/Documents/scripts/www/GoBarber-2.0/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/lon1/Documents/scripts/www/GoBarber-2.0/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/lon1/Documents/scripts/www/GoBarber-2.0/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/lon1/Documents/scripts/www/GoBarber-2.0/web/src/screens/Signin/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Image from 'next/image';\nimport { Form, useFormik } from 'formik';\nimport { useMutation } from '@apollo/client';\nimport * as Yup from 'yup';\nimport SIGNIN_MUTATION from '../../schemas/Mutations/Signin';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\nimport { Container, Content, Logo, BackgroundImage } from './styles';\n\nvar Signin = function Signin() {\n  _s();\n\n  var _useMutation = useMutation(SIGNIN_MUTATION, {\n    variables: {\n      email: '',\n      password: ''\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      signin = _useMutation2[0];\n\n  var initialValues = {\n    email: '',\n    password: ''\n  };\n  var validationSchema = Yup.object({\n    email: Yup.string().required('Email is required').email(),\n    password: Yup.string().required('Password is required')\n  });\n  var validate = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setSubmitting, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref.setSubmitting;\n                setSubmitting(true);\n                _context.next = 4;\n                return signin({\n                  variables: values\n                });\n\n              case 4:\n                response = _context.sent;\n                localStorage.setItem('token', response.data.signin.token);\n                setSubmitting(false);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onSubmit(_x, _x2) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  });\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Image, {\n    src: \"/assets/logo.svg\",\n    alt: \"Background Image\",\n    width: \"192\",\n    height: \"192\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Fa\\xE7a seu login\"), __jsx(Form, {\n    onSubmit: validate.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    id: 'email',\n    type: \"text\",\n    placeholder: \"E-mail\",\n    value: validate.values.email,\n    onBlur: validate.handleBlur,\n    onChange: validate.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    id: 'password',\n    type: \"password\",\n    placeholder: \"Senha\",\n    value: validate.values.email,\n    onBlur: validate.handleBlur,\n    onChange: validate.handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    disabled: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Entrar\"))), __jsx(BackgroundImage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Image, {\n    src: \"/assets/background-image.png\",\n    alt: \"Background Image\",\n    layout: \"fill\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Signin, \"UvkTOoAo5nemk4oONpWjcIReN4Q=\", false, function () {\n  return [useMutation, useFormik];\n});\n\n_c = Signin;\nexport default Signin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"sources":["/home/lon1/Documents/scripts/www/GoBarber-2.0/web/src/screens/Signin/index.tsx"],"names":["React","Image","Form","useFormik","useMutation","Yup","SIGNIN_MUTATION","Input","Button","Container","Content","Logo","BackgroundImage","Signin","variables","email","password","signin","initialValues","validationSchema","object","string","required","validate","onSubmit","values","setSubmitting","response","localStorage","setItem","data","token","handleSubmit","handleBlur","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Image from 'next/image';\nimport { Form, useFormik } from 'formik';\nimport { useMutation } from '@apollo/client';\nimport * as Yup from 'yup';\nimport { FiMail } from 'react-icons/fi';\n\nimport SIGNIN_MUTATION from '../../schemas/Mutations/Signin';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Logo, BackgroundImage } from './styles';\n\nconst Signin: React.FC = () => {\n  const [signin] = useMutation(SIGNIN_MUTATION, {\n    variables: {\n      email: '',\n      password: '',\n    }\n  })\n\n  const initialValues = {\n    email: '',\n    password: ''\n  }\n\n  const validationSchema = Yup.object({\n    email: Yup.string().required('Email is required').email(),\n    password: Yup.string().required('Password is required')\n  })\n\n  const validate = useFormik({\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: async (values, { setSubmitting }) => {\n      setSubmitting(true);\n\n      const response = await signin({\n        variables: values\n      })\n\n      localStorage.setItem('token', response.data.signin.token);\n\n      setSubmitting(false);\n    }\n  })\n\n  return (\n    <Container>\n      <Content>\n        <Logo>\n          <Image src=\"/assets/logo.svg\" alt=\"Background Image\" width=\"192\" height=\"192\" />\n        </Logo>\n\n        <h1>Fa√ßa seu login</h1>\n\n        <Form onSubmit={validate.handleSubmit}>\n          <Input\n            id={'email'}\n            type=\"text\"\n            placeholder=\"E-mail\"\n            value={validate.values.email}\n            onBlur={validate.handleBlur}\n            onChange={validate.handleChange}\n          />\n\n          <Input\n            id={'password'}\n            type=\"password\"\n            placeholder=\"Senha\"\n            value={validate.values.email}\n            onBlur={validate.handleBlur}\n            onChange={validate.handleChange}\n          />\n\n          <Button type=\"submit\" disabled={false}>Entrar</Button>\n        </Form>\n      </Content>\n\n      <BackgroundImage>\n        <Image src=\"/assets/background-image.png\" alt=\"Background Image\" layout='fill' />\n      </BackgroundImage>\n    </Container>\n  )\n}\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}